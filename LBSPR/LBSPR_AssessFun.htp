#if !defined(_LBSPR_AssessFun_)
#  define _LBSPR_AssessFun_

class model_data : public ad_comm{
  data_number MK;
  data_number Linf;
  data_number LinfCV;
  data_number PercentLeft;
  data_number NumAge;
  data_vector RelAge;
  data_int LBins;
  data_vector LengthMids;
  data_vector LengthClss;
  data_vector ObsLength;
  data_vector ObsProp;
  data_number MatL50;
  data_number MatL95;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_number SelL50;
  param_init_bounded_number Delta;
  param_init_number logFM;
  param_matrix AgeLengthProbMat;
  param_vector Lengths;
  param_vector LenSD;
  param_vector AgeVec;
  param_vector SelA;
  param_vector SelL;
  param_vector Pop;
  param_vector CatchatAge;
  param_vector CatchatLength;
  param_vector CatchatLength2;
  param_number FM;
  param_vector ZVector;
  param_vector ZVector2;
  param_vector FVector;
  param_vector FMVector;
  param_matrix SelAgeLengthProbs;
  param_number genF;
  param_number genM;
  param_vector CStructPred;
  param_vector CStructPred2;
  param_number Zscore;
  param_vector NormLengths;
  param_vector LengthClasses;
  param_number SelNLL;
  param_vector SumOfAges;
  param_matrix NewStandProbMat;
  param_number SPR;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value obj_fun;
public:
  virtual void userfunction(void);
  virtual void report(void);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void){}
  void AgeLengthProbFun(void);
  void Select(void);
  void PredictLengthStruct(void);
  void EstimateSPR(void);

};
#endif
